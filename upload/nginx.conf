
user  nobody;
worker_processes  auto;
worker_cpu_affinity     auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    use epoll;
    accept_mutex             off;  
    multi_accept             on;
    worker_connections  10240;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main '$remote_addr\t$http_x_forwarded_for\t-\t$remote_user\t'
                     '$time_iso8601\t$request_method\t"$document_uri"\t'
                     '"$query_string"\t$server_protocol\t$status\t$body_bytes_sent\t'
                     '$request_time\t"$http_referer"\t"$http_user_agent"\t'
                     '$http_Cdn-Src-Ip\t$host\t$hostname\t$server_addr\t'
                     '$remote_port\t$server_port\t'
                     '"$upstream_addr"\t"$upstream_status"\t"$upstream_response_time"\tV5';

    access_log  logs/access.log  main;
    server_tokens       off;
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  15;
    concat on;

    #gzip  on;
    gzip  on;
    gzip_vary on;
    gzip_min_length  1k;
    gzip_buffers     4  8k;
    gzip_comp_level 1;
    gzip_types       text/plain application/x-javascript text/css text/htm application/xml application/javascript text/javascript;
    gzip_http_version 1.1;
    proxy_buffering off;
	
	client_max_body_size 5m;
	client_body_buffer_size 512k;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        access_log  /opt/rsync_log/access_http.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }
	
		location /NginxStatus {
			  stub_status on; 
			  allow 127.0.0.1;
			  allow 192.168.138.0/24;
			  allow 192.168.241.0/24;
			  allow 192.168.242.0/24;
			  allow 192.168.119.0/24;
			  allow 192.168.207.0/24;
			  allow 192.168.90.0/24;
			  allow 192.168.224.34;
			  deny all;
		}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
	
		location  /uploadFiles.gif {
			content_by_lua_file /usr/local/nginx/conf/lua/snUpload.lua;
		}
		
		location ~ /uploadFiles.log {
			log_subrequest on;
			access_log /usr/local/nginx/logs/access.log;
			lua_need_request_body on;
			default_type 'text/plain';
        }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    server {
        listen       443;
        server_name  localhost;
        access_log  /opt/rsync_log/access_https.log  main;
        server_tokens off;

        ssl                  on;
        ssl_certificate      cnsuning.pem;
        ssl_certificate_key  cnsuning.key;

        ssl_session_timeout  5m;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
        ssl_prefer_server_ciphers   on;

        location / {
            root   html;
            index  index.html index.htm;
        }
		
		location  /uploadFiles.gif {
			content_by_lua_file /usr/local/nginx/conf/lua/snUpload.lua;
		}
		
		location ~ /uploadFiles.log {
			log_subrequest on;
			access_log /usr/local/nginx/logs/access.log;
			lua_need_request_body on;
			default_type 'text/plain';
        }
    }

}

#TCP/UDP proxy
#
#stream {
#    proxy_next_upstream on;
#    proxy_next_upstream_tries 4;
#
#    upstream list1 {
#        server 192.168.0.1:12345;
#        server 192.168.0.2:12345;
#        server 192.168.0.3:12345;
#        server 192.168.0.4:12345;
#        server 192.168.0.5:12345;
#    }
#
#    server {
#        listen 12345;
#        proxy_pass list1;
#    }
#}

